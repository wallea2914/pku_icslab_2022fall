                            | #name：赵伟城
                            | #ID：2100013165
                            | #
                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array of 8 elements
0x018:                      | .align 8
0x018:                      | Array:
0x018: ca0b000000000000     | .quad 0xbca
0x020: ba0c000000000000     | .quad 0xcba
0x028: cb0a000000000000     | .quad 0xacb
0x030: ab0c000000000000     | .quad 0xcab
0x038: bc0a000000000000     | .quad 0xabc
0x040: ac0b000000000000     | .quad 0xbac
                            | 
0x048:                      | main:	
0x048: 30f71800000000000000 |     irmovq Array,%rdi
0x052: 30f60600000000000000 | 	irmovq $6,%rsi
0x05c: 806600000000000000   | 	call bubble_sort		#call bubble_sort(Array,6)
0x065: 90                   | 	ret
                            | 
                            | # void bubble_sort(long *data, long count)
                            | # data in %rdi, count in %rsi
0x066:                      | bubble_sort:	
0x066: a03f                 |     pushq %rbx
0x068: a05f                 |     pushq %rbp
0x06a: a0cf                 |     pushq %r12
0x06c: a0df                 |     pushq %r13
0x06e: a0ef                 |     pushq %r14
                            | 
0x070: 30fa0100000000000000 |     irmovq $1,%r10  #constant 1
0x07a: 30f80800000000000000 |     irmovq $8,%r8   #constant 8
                            |     # calculate r9 = count * 8
0x084: 6399                 |     xorq %r9,%r9
0x086: 709300000000000000   |     jmp test
0x08f:                      | loop:
0x08f: 6089                 |     addq %r8,%r9
0x091: 61a6                 |     subq %r10,%rsi
0x093:                      | test:
0x093: 6266                 |     andq %rsi,%rsi
0x095: 748f00000000000000   |     jne loop
                            |     
0x09e: 2075                 |     rrmovq %rdi,%rbp
0x0a0: 6095                 |     addq %r9,%rbp
0x0a2: 6185                 |     subq %r8,%rbp  #rbp--last  last = data + count - 1
0x0a4: 700201000000000000   |     jmp test1
                            | 
0x0ad:                      | loop1:
0x0ad: 2073                 |     rrmovq %rdi,%rbx #rbx--i    i = data
0x0af: 70f300000000000000   |     jmp test2
                            | 
0x0b8:                      | loop2:
0x0b8: 203b                 |     rrmovq %rbx,%r11 
0x0ba: 608b                 |     addq %r8,%r11 #r11 = i + 1
0x0bc: 50cb0000000000000000 |     mrmovq (%r11),%r12 #r12 = *(i + 1)
0x0c6: 50d30000000000000000 |     mrmovq (%rbx),%r13 #r13 = *i
0x0d0: 20ce                 |     rrmovq %r12,%r14
0x0d2: 61de                 |     subq %r13,%r14 #*(i + 1) - *i
0x0d4: 75f100000000000000   |     jge test3
0x0dd: 40db0000000000000000 |     rmmovq %r13,(%r11)
0x0e7: 40c30000000000000000 |     rmmovq %r12,(%rbx)
                            | 
0x0f1:                      | test3:
0x0f1: 6083                 |     addq %r8,%rbx # i++
                            | 
0x0f3:                      | test2:
0x0f3: 203b                 |     rrmovq %rbx,%r11
0x0f5: 615b                 |     subq %rbp,%r11 #i - last
0x0f7: 72b800000000000000   |     jl loop2
0x100: 6185                 |     subq %r8,%rbp # last--
                            | 
0x102:                      | test1:	
0x102: 205b                 |     rrmovq %rbp,%r11
0x104: 617b                 |     subq %rdi,%r11  #last - data
0x106: 76ad00000000000000   |     jg    loop1  
0x10f: b03f                 |     popq %rbx
0x111: b05f                 |     popq %rbp
0x113: b0cf                 |     popq %r12
0x115: b0df                 |     popq %r13
0x117: b0ef                 |     popq %r14 
0x119: 90                   | 	ret                  
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
