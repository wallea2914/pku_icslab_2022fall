jmp test4
while4:	
	mrmovq (%rdi), %r10	# read val from src...
	mrmovq $8(%rdi), %r11
	mrmovq $16(%rdi), %r12
	mrmovq $24(%rdi), %r13
	iaddq $32, %rdi		  #######改变顺序，减少数据项依赖
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, $8(%rsi)
	rmmovq %r12, $16(%rsi)
	rmmovq %r13, $24(%rsi)
	iaddq $32, %rsi		

	andq %r10, %r10		# val <= 0?
	jle tmp41		# if so, goto Npos:
	iaddq $1, %rax		# count++
tmp41:
	andq %r11,%r11
	jle tmp42
	iaddq $1,%rax
tmp42:
	andq %r12,%r12
	jle tmp43
	iaddq $1,%rax
tmp43:
	andq %r13,%r13
	jle tmp44
	iaddq $1,%rax
tmp44:
	iaddq $-4, %rdx		# len-=4
test4:
	rrmovq %rdx,%r10
	iaddq $-4,%r10
	jg while4		# if so, goto Loop:



	jmp test2
while2:	
	mrmovq (%rdi), %r10	# read val from src...
	mrmovq $8(%rdi), %r11
	iaddq $16, %rdi		  #######改变顺序，减少数据项依赖
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, $8(%rsi)
	iaddq $16, %rsi		

	andq %r10, %r10		# val <= 0?
	jle tmp21		# if so, goto Npos:
	iaddq $1, %rax		# count++
tmp21:
	andq %r11,%r11
	jle tmp22
	iaddq $1,%rax
tmp22:
	iaddq $-2, %rdx		# len-=2
test2:
	rrmovq %rdx,%r10
	iaddq $-2,%r10
	jg while2  		# if so, goto Loop:




	rrmovq %rdx,%r10
	iaddq $-8,%r10
	jle while4
while8:	
	mrmovq (%rdi), %r10	# read val from src...
	mrmovq $8(%rdi), %r11
	mrmovq $16(%rdi), %r12
	mrmovq $24(%rdi), %r13
	mrmovq $32(%rdi), %r14
	mrmovq $40(%rdi), %rbx
	mrmovq $48(%rdi), %rbp
	mrmovq $56(%rdi), %r9
	iaddq $64, %rdi		  #######改变顺序，减少数据项依赖
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, $8(%rsi)
	rmmovq %r12, $16(%rsi)
	rmmovq %r13, $24(%rsi)
	rmmovq %r14, $32(%rsi)
	rmmovq %rbx, $40(%rsi)
	rmmovq %rbp, $48(%rsi)
	rmmovq %r9, $56(%rsi)
	iaddq $64, %rsi		

	andq %r10, %r10		# val <= 0?
	jle tmp81		# if so, goto Npos:
	iaddq $1, %rax		# count++
tmp81:
	andq %r11,%r11
	jle tmp82
	iaddq $1,%rax
tmp82:
	andq %r12,%r12
	jle tmp83
	iaddq $1,%rax
tmp83:
	andq %r13,%r13
	jle tmp84
	iaddq $1,%rax
tmp84:
	andq %r14,%r14
	jle tmp85
	iaddq $1,%rax
tmp85:
	andq %rbx,%rbx
	jle tmp86
	iaddq $1,%rax
tmp86:
	andq %rbp,%rbp
	jle tmp87
	iaddq $1,%rax
tmp87:
	andq %r9,%r9
	jle tmp88
	iaddq $1,%rax
tmp88:
	iaddq $-8, %rdx		# len-=8
#test8:
	rrmovq %rdx,%r10
	iaddq $-8,%r10
	jg while8		# if so, goto Loop: